// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[9..11], a=selectRAM0, b=selectRAM1, c=selectRAM2, d=selectRAM3, e=selectRAM4, f=selectRAM5, g=selectRAM6, h=selectRAM7);

    And(a=load, b=selectRAM0, out=loadSelectRAM0);
    And(a=load, b=selectRAM1, out=loadSelectRAM1);
    And(a=load, b=selectRAM2, out=loadSelectRAM2);
    And(a=load, b=selectRAM3, out=loadSelectRAM3);
    And(a=load, b=selectRAM4, out=loadSelectRAM4);
    And(a=load, b=selectRAM5, out=loadSelectRAM5);
    And(a=load, b=selectRAM6, out=loadSelectRAM6);
    And(a=load, b=selectRAM7, out=loadSelectRAM7);

    RAM512(in=in, load=loadSelectRAM0, address=address[0..8], out=RAM512out0);
    RAM512(in=in, load=loadSelectRAM1, address=address[0..8], out=RAM512out1);
    RAM512(in=in, load=loadSelectRAM2, address=address[0..8], out=RAM512out2);
    RAM512(in=in, load=loadSelectRAM3, address=address[0..8], out=RAM512out3);

    RAM512(in=in, load=loadSelectRAM4, address=address[0..8], out=RAM512out4);
    RAM512(in=in, load=loadSelectRAM5, address=address[0..8], out=RAM512out5);
    RAM512(in=in, load=loadSelectRAM6, address=address[0..8], out=RAM512out6);
    RAM512(in=in, load=loadSelectRAM7, address=address[0..8], out=RAM512out7);

    Mux8Way16(a=RAM512out0, b=RAM512out1, c=RAM512out2, d=RAM512out3, e=RAM512out4, f=RAM512out5, g=RAM512out6, h=RAM512out7, sel=address[9..11], out=out);
}